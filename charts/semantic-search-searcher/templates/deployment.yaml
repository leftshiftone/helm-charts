apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "semantic-search-searcher.fullname" . }}-app
  labels:
    {{- include "semantic-search-searcher.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "semantic-search-searcher.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "semantic-search-searcher.configChecksum" . | nindent 8 }}
      labels:
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        application: {{ include "semantic-search-searcher.name" . }}
        {{- include "semantic-search-searcher.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "semantic-search-searcher.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.app.waitForGrafana }}
      initContainers:
        {{- if .Values.app.waitForElasticsearch }}
        - name: {{ .Chart.Name }}-elasticsarch-check
          image: curlimages/curl:7.84.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - 'until curl --fail --silent --output /dev/null $ELASTICSEARCH_URL/_cluster/health; do echo "Waiting for elasticsearch to be available at $ELASTICSEARCH_URL/_cluster/health..."; sleep 3; done'
          env:
            - name: ELASTICSEARCH_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "semantic-search-searcher.fullname" . }}
                  key: ES_URL
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "semantic-search-searcher.fullname" . }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
