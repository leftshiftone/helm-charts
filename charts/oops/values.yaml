# Default values for oops.
# This is a YAML-formatted file.

app:
  # Specifies configuration of the application
  config:
    # Available log levels: DEBUG, INFO, WARN, ERROR
    OOPS_LOG_LEVEL: "INFO"
    # Explicitly set the initial admin password.
    # OOPS_SECURITY_ADMIN_PASSWORD: "admin"

replicaCount: 1

image:
  repository: 007098893018.dkr.ecr.eu-central-1.amazonaws.com/oops
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: oops.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: oops-tls
  #    hosts:
  #      - oops.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 2048Mi
  # requests:
  #   cpu: 500m
  #   memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 9
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

extraVolumeMounts: []
  # - mountPath: /debug
  #   name: host
  #   readOnly: true
extraVolumes: []
  # - name: host
  #   hostPath:
  #     path: /host
  #     type: Directory

nodeSelector: {}

tolerations: []

affinity: {}

# Deploy postgres with the included helm chart from https://artifacthub.io/packages/helm/bitnami/postgresql
postgresql:
  enabled: true
  postgresqlDatabase: oops
  postgresqlUsername: admin
  # If left empty a random password will be created in a secret with the name specified below. If a specific password
  # should be used, the existingSecret needs to be set to an empty string or needs to be commented out.
  postgresqlPassword: ""
  existingSecret: oops-postgresql-password
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 11.12.0-debian-10-r24
  persistence:
    enabled: true
    size: 5G
#  securityContext:
#    fsGroup: 0
#  volumePermissions:
#    enabled: true
#    securityContext:
#      runAsUser: 0
#  resources:
#    limits:
#      cpu: 1000m
#      memory: 1024Gi
#    requests:
#      cpu: 250m
#      memory: 256Mi
