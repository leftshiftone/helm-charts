# Default values for semantic-search.
# This is a YAML-formatted file.

semantic-search-indexer:
  enabled: true
  app:
    config:
      LOG_LEVEL: "INFO"
      ES_URL: "http://semantic-search-elasticsearch:9200"
      MINIO_HOST: "semantic-search-minio:9000"
      MINIO_USER: indexer
      # See the readme on how to upload and mount the model.
      # MODEL_PATH: "/models/sentence-transformers_paraphrase-multilingual-MiniLM-L12-v2"
      ENABLE_METRICS: "false"
    minioExistingSecret: semantic-search-minio-passwords
    minioExistingSecretKey: indexerPassword
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi
  extraVolumeMounts: []
    # - mountPath: /models
    #   name: models
    #   readOnly: true
  extraVolumes: []
    # - name: models
    #   persistentVolumeClaim:
    #     claimName: model-volume-claim
  podMonitor:
    enabled: false
    # namespace: monitoring
    interval: 10s
    additionalLabels: {}

semantic-search-searcher:
  enabled: true
  app:
    config:
      LOG_LEVEL: "INFO"
      ES_URL: "http://semantic-search-elasticsearch:9200"
      # See the readme on how to upload and mount the model.
      # MODEL_PATH: "/models/sentence-transformers_paraphrase-multilingual-MiniLM-L12-v2"
      ENABLE_METRICS: "false"
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi
  extraVolumeMounts: []
    # - mountPath: /models
    #   name: models
    #   readOnly: true
  extraVolumes: []
    # - name: models
    #   persistentVolumeClaim:
    #     claimName: model-volume-claim
  podMonitor:
    enabled: false
    # namespace: monitoring
    interval: 10s
    additionalLabels: {}

# See https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-install-helm.html for more information
eck-operator:
  enabled: true
  installCRDs: false # First install CRDs: helm upgrade --install esk-operator-crds --version 2.4.0 elastic/eck-operator-crds
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 100m
    #   memory: 150Mi

elasticsearch:
  enabled: true
  version: 8.4.0
  replicas: 3
  config: {}
    # Satisfies bootstrap check "max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]"
    # node.store.allow_mmap: false
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 6144Mi
    # requests:
    #   cpu: 1000m
    #   memory: 1024Mi
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        # storageClassName: default


prometheus-elasticsearch-exporter:
  enabled: false
  es:
    uri: http://elasticsearch-master:9200
    all: true
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 256Mi
    # requests:
    #   cpu: 10m
    #   memory: 128Mi
  serviceMonitor:
    enabled: false
    # namespace: monitoring
    interval: 10s
    labels: {}


minio:
  enabled: true
  image:
    tag: RELEASE.2022-07-30T05-21-40Z
  persistence:
    enabled: true
    size: 10G
  # rootUser: admin
  # rootPassword: adminadmin
  users:
    - accessKey: indexer
      # secretKey: indexersecret
      existingSecret: semantic-search-minio-passwords
      existingSecretKey: indexerPassword
      policy: indexer
    - accessKey: searcher
      # secretKey: searchersecret
      existingSecret: semantic-search-minio-passwords
      existingSecretKey: searcherPassword
      policy: searcher
  policies:
    - name: indexer
      statements:
        - resources:
            - "arn:aws:s3:::*/*"
          actions:
            # can create buckets and read bucket content
            - "s3:CreateBucket"
            - "s3:DeleteBucket"
            - "s3:GetBucketLocation"
            - "s3:ListBucket"
            - "s3:ListBucketMultipartUploads"
            - "s3:ListMultipartUploadParts"
            - "s3:AbortMultipartUpload"
            - "s3:GetObject"
    - name: searcher
      statements:
        - resources:
            - "arn:aws:s3:::*/*"
          actions:
            # can read and write into buckets
            - "s3:GetBucketLocation"
            - "s3:ListBucket"
            - "s3:ListBucketMultipartUploads"
            - "s3:ListMultipartUploadParts"
            - "s3:AbortMultipartUpload"
            - "s3:GetObject"
            - "s3:DeleteObject"
            - "s3:PutObject"
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 250m
    #   memory: 256Mi
  metrics:
    serviceMonitor:
      enabled: false
      # namespace: monitoring
      interval: 30s
      additionalLabels: {}
