# This cronjob updates the image pull secret for the Elastic Container Registry (ECR) in the namespace it has been
# applied to. For non-restrictive clusters it might be easier to use something like https://github.com/upmc-enterprises/registry-creds.
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecr-image-pull-secret-handler
data:
  AWS_REGION: "eu-central-1"
  K8S_VERSION: "v1.24.0"
  ECR_SECRET_NAME: "ecr-image-pull-secret"
---
apiVersion: v1
kind: Secret
metadata:
  name: ecr-image-pull-secret-handler
stringData:
  AWS_ACCOUNT: "007098893018"
  AWS_ACCESS_KEY_ID: "PLEASE ENTER KEY"
  AWS_SECRET_ACCESS_KEY: "PLEASE ENTER SECRET"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-image-pull-secret-handler
spec:
  schedule: "0 */10 * * *"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ecr-image-pull-secret-handler
          containers:
            - name: ecr-image-pull-secret-handler
              image: amazon/aws-cli:2.11.9
              imagePullPolicy: IfNotPresent
              securityContext:
                runAsNonRoot: true
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                seccompProfile:
                  type: RuntimeDefault
              envFrom:
                - secretRef:
                    name: ecr-image-pull-secret-handler
                - configMapRef:
                    name: ecr-image-pull-secret-handler
              env:
                - name: ECR_SECRET_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              command:
                - /bin/sh
                - -c
                - |-
                  set -Eeuo pipefail
                  cd /tmp
                  echo "Retrieving token..."
                  ECR_TOKEN=`aws ecr get-login-password --region ${AWS_REGION}`
                  echo "Installing kubectl..."
                  curl -LO https://dl.k8s.io/release/${K8S_VERSION}/bin/linux/amd64/kubectl && curl -LO "https://dl.k8s.io/${K8S_VERSION}/bin/linux/amd64/kubectl.sha256" && echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check && chmod +x ./kubectl
                  echo "Detected namespace $ECR_SECRET_NAMESPACE"
                  echo "Removing old secret..."
                  ./kubectl delete secret --ignore-not-found $ECR_SECRET_NAME -n $ECR_SECRET_NAMESPACE
                  echo "Creating new secret..."
                  ./kubectl create secret docker-registry $ECR_SECRET_NAME --docker-server=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com --docker-username=AWS --docker-password="${ECR_TOKEN}" --namespace=$ECR_SECRET_NAMESPACE && echo "Secret was successfully updated at $(date)"
          restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-image-pull-secret-handler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ecr-image-pull-secret-handler
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "delete"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ecr-image-pull-secret-handler
subjects:
- kind: ServiceAccount
  name: ecr-image-pull-secret-handler
  apiGroup: ""
roleRef:
  kind: Role
  name: ecr-image-pull-secret-handler
  apiGroup: ""