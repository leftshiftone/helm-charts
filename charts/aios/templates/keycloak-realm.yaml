{{- if and .Values.keycloak.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.keycloak.realmConfigmapName }}
  labels:
  {{- include "aios.labels" . | nindent 4 }}
data:
  keycloak-aios.json: |
    {
      "id": "AIOS",
      "realm": "AIOS",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 600,
      "accessTokenLifespanForImplicitFlow": 1800,
      "ssoSessionIdleTimeout": 28800,
      "ssoSessionMaxLifespan": 172800,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": true,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": true,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 300,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 10,
      "roles": {
        "realm": [
          {
            "id": "58fdaafa-bc38-4c03-ab22-b1d90897fb96",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "AIOS",
            "attributes": {}
          },
          {
            "id": "9107842a-c795-4f51-ab1a-d1ece834bf65",
            "name": "default-roles-aios",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ]
            },
            "clientRole": false,
            "containerId": "AIOS",
            "attributes": {}
          },
          {
            "id": "08975c09-91fa-47c9-930a-6503d9c8f4bd",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "AIOS",
            "attributes": {}
          }
        ],
        "client": {
          "aios": [],
          "realm-management": [
            {
              "id": "501e6be1-27d7-4127-a166-53dfd3fd39f6",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "c401c066-8b65-4d43-8df7-e8953ab6ea40",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "97900441-0d41-4095-bfea-b0b9290258df",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "d03934c2-d13f-4b43-939c-d41f00e99957",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-users",
                    "query-groups"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "c4b2d0c5-d0d8-4f38-baa9-39143e912090",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "8d20bb0e-8b0d-4690-b9d5-3be7e90aa3eb",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "4fc1f604-ef77-4cb5-a0bc-edc7abd1bd97",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "0aa29137-652b-4b98-acf0-6185e8ff616f",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "504f6802-7c08-4a87-83e7-5b18a0ef3127",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "2fd86f91-3780-460b-b3ad-b2092a806c5e",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "e8bf0a2d-8fbf-4991-8517-2418194c2f69",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "23d78123-938d-4ffa-9811-8a401b16eb3d",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "f36a7afe-fb21-44a2-a96a-26eef0a41c60",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-authorization",
                    "manage-identity-providers",
                    "query-realms",
                    "view-users",
                    "impersonation",
                    "query-clients",
                    "view-events",
                    "manage-events",
                    "view-clients",
                    "manage-realm",
                    "view-realm",
                    "query-users",
                    "create-client",
                    "query-groups",
                    "view-identity-providers",
                    "manage-users",
                    "manage-clients",
                    "view-authorization"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "b8e960f1-c557-498f-a473-cc568c101e97",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "ba30cdb6-ebfc-464a-92f2-5419cb5000b6",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "c737e2c6-3fa6-400a-8451-127b55d54579",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "90d4a13a-6d31-4864-b136-9ec1c607dc6e",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "2cd2cc42-07ba-4fb0-97f2-eca52b1fe5ec",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            },
            {
              "id": "85cf8c5b-d37d-4590-8b59-aab0c425169f",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "aios-grafana": [],
          "broker": [],
          "account": [
            {
              "id": "af7ab715-3b5a-4e6d-81f8-85a9c0856a41",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "9e0f51d6-18e7-4b2a-87a5-0472292c837b",
              "attributes": {}
            },
            {
              "id": "c972f61c-04b2-4b21-9207-b3f6a4c75f9a",
              "name": "manage-account",
              "composite": false,
              "clientRole": true,
              "containerId": "9e0f51d6-18e7-4b2a-87a5-0472292c837b",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [
        {
          "id": "52f6da10-8655-4b78-8630-e433b20a2ff3",
          "name": "User",
          "path": "/User",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {
            "account": [
              "delete-account",
              "manage-account"
            ]
          },
          "subGroups": []
        }
      ],
      "defaultRole": {
        "id": "9107842a-c795-4f51-ab1a-d1ece834bf65",
        "name": "default-roles-aios",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "AIOS"
      },
      "defaultGroups": [
        "/User"
      ],
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "9e0f51d6-18e7-4b2a-87a5-0472292c837b",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/AIOS/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/AIOS/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "541ca543-cc5c-490a-9d1a-b22235f425ac",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/AIOS/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/AIOS/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "7af400b4-797b-4212-a4a9-a3e9dc72680c",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "080ab40b-5f56-4e7c-a6f9-01525d6c92f5",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "781936c8-b803-41c0-9b6a-eadd7a484da4",
          "clientId": "aios",
          "name": "AIOS",
          "description": "OpenID Connect client for AIOS",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "${AIOS_REALM_AIOS_REDIRECT_URI_1}"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "use.refresh.tokens": "true",
            "oidc.ciba.grant.enabled": "false",
            "id.token.signed.response.alg": "RS512",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "require.pushed.authorization.requests": "false",
            "saml.client.signature": "false",
            "id.token.as.detached.signature": "false",
            "saml.assertion.signature": "false",
            "saml.encrypt": "false",
            "access.token.signed.response.alg": "RS256",
            "saml.server.signature": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml.artifact.binding": "false",
            "saml_force_name_id_format": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "authorization.signed.response.alg": "RS512",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "71a3cc6d-e02c-488c-a464-16c5b6981dc8",
          "clientId": "aios-grafana",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "${AIOS_REALM_GRAFANA_CLIENT_SECRET}",
          "redirectUris": [
            "${AIOS_REALM_GRAFANA_REDIRECT_URI_1}"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "id.token.as.detached.signature": "false",
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "use.refresh.tokens": "true",
            "exclude.session.state.from.auth.response": "false",
            "oidc.ciba.grant.enabled": "false",
            "saml.artifact.binding": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "saml_force_name_id_format": "false",
            "require.pushed.authorization.requests": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "b8d462e2-5f0b-457e-a709-b88b870cd4e0",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "7080fc0a-4041-43af-b2b8-5c910c9ceac8",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "eb27ee51-8260-4d5b-ad32-01fdcf55ee82",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/AIOS/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/AIOS/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "e3cfc3da-aa5f-4a86-b5e4-1f4c0db01fe8",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "a0c3230c-f7d1-4c5a-84d1-6f42c43a695f",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "e199ae70-bd5f-4b48-a92d-ef790c9320fe",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "8df7a6fa-8c22-4630-b0ba-530ab497bf2c",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            },
            {
              "id": "cea54991-046c-47cc-b2e1-836fb75533a2",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "bd4e3646-eefe-46a7-ac09-518f43f65134",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "89a96601-ddc3-4147-83eb-6faf4d360e5d",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "182122bb-4f77-4533-845a-b203c4e36977",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "bbfca199-2203-4db3-b57c-8019926f7031",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "ecae9a30-77c5-4794-b972-8f1126e0b759",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "fd644918-0cc3-44e4-bb30-6ee6ffd789b0",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "026c7eeb-fdff-400f-a819-26e5a3b95450",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "8c9fd804-f4a9-46c8-9f6f-0ee98f041897",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1afa17d7-7bc8-4b13-bf9c-c82e9b81ebd2",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5c859f64-07c5-4253-9ca6-68175730b286",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "af653610-12e0-4a1a-b7d7-6ed2140f275b",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4528d240-79e0-4444-bb89-3d14f20da96c",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "790780d5-dbc4-49e5-850c-b4355c337763",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "907ced21-1f60-4531-abf5-b54b83f41214",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9ecd5de7-92a3-46c5-b10b-5b75ee04f40e",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "8e6bd8ee-f17a-47a0-89f5-5b6537d838eb",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5d8e1999-2d13-4a8c-8dcf-ef5d0f31248f",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "458089ee-fb01-41c6-91b5-47fca219f35b",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "String"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "profile",
        "email"
      ],
      "defaultOptionalClientScopes": [],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {
        "fromDisplayName": "${AIOS_REALM_SMTP_FROM_NAME}",
        "from": "${AIOS_REALM_SMTP_FROM_ADDRESS}",
        "replyToDisplayName": "",
        "replyTo": "${AIOS_REALM_SMTP_REPLY_ADDRESS}",
        "host": "${AIOS_REALM_SMTP_HOST}",
        "port": "${AIOS_REALM_SMTP_PORT}",
        "auth": "${AIOS_REALM_SMTP_AUTH}",
        "ssl": "${AIOS_REALM_SMTP_SSL}",
        "starttls": "${AIOS_REALM_SMTP_STARTTLS}",
        "user": "${AIOS_REALM_SMTP_USER}",
        "password": "${AIOS_REALM_SMTP_PASSWORD}"
      },
      "loginTheme": "keycloak-aios",
      "accountTheme": "keycloak-aios",
      "adminTheme": "keycloak",
      "emailTheme": "base",
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "ece903bf-0cb3-4b4b-bb87-3e46bd40c19b",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "1230ce5c-d953-4d64-a892-23923adeb97f",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "368bfe5c-ccf9-4098-90e2-06a0fafcd678",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "false"
              ],
              "allowed-client-scopes": [
                "email",
                "profile"
              ]
            }
          },
          {
            "id": "b434dc5d-b6f0-4833-905e-e7b155ee0821",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "af5f1845-14f1-401e-8053-1d992bc1f528",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-attribute-mapper",
                "saml-user-attribute-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-property-mapper",
                "oidc-address-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-full-name-mapper",
                "saml-role-list-mapper"
              ]
            }
          },
          {
            "id": "a100cc0c-6c00-48d5-95b7-3a40b0be2264",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-full-name-mapper",
                "saml-role-list-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-attribute-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-property-mapper",
                "oidc-address-mapper"
              ]
            }
          },
          {
            "id": "099ba98f-d05d-4090-b7d5-a9437a63d8c1",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "ea2bd52b-f695-4e0e-9e2a-9a3f356dd469",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "6d506b4f-f98c-4e53-a443-d614959be350",
            "name": "rsa-enc-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "keyUse": [
                "enc"
              ],
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "744b0986-fdfb-41fe-a265-c97a9d375ba2",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "keyUse": [
                "sig"
              ],
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "b59793d6-6967-49b5-bb9d-a5a73784d161",
            "name": "fallback-RS512",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "-100"
              ],
              "algorithm": [
                "RS512"
              ]
            }
          },
          {
            "id": "d45fe92a-03ba-4d1e-8dd6-b22bafec553b",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "528a86ab-864f-4f31-9cdb-57465f5ba7dd",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [
        ""
      ],
      "authenticationFlows": [
        {
          "id": "4473a5f1-ead7-427e-89ca-d57d03305bc7",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "ca76df1d-022e-402b-ae86-abeec3d87674",
          "alias": "Authentication Options",
          "description": "Authentication options.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "basic-auth",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "basic-auth-otp",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "1b3e3b9a-1bbe-4804-a28f-ec1da74c43f1",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "ba633b34-a2cd-4553-b1ef-5b538486e45d",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "e1e796b3-69de-4c39-83dc-d280c2d44e76",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "ea89a3ab-9810-4d81-83d8-9f6ca9918452",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "60eb191d-79e3-49c2-8664-86a0ffafe014",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "52ad3d63-328f-4ae0-a16e-5dd0c4f82925",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "63e8167c-7dbb-45e3-a167-8f3b6c73c40a",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "481accd6-0379-4967-913b-e8810b3aa09a",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "flowAlias": "forms",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "6ee9ddc5-173e-4138-98cf-26e8d44ed8db",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "dd7a7966-00d1-4980-b1a8-9865e2fea303",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "18e597a5-29ac-4215-80ab-f5837be24790",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "6689358f-77d1-413a-87c2-625122568e39",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "d1c805fa-af52-4eb5-a9d1-8c3af257fd6f",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "568bcc7b-7a68-45a6-9c19-09a6ddf1a6c3",
          "alias": "http challenge",
          "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "no-cookie-redirect",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "Authentication Options",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "cdaa9d17-76a5-403e-bc40-c07a076bf704",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "flowAlias": "registration form",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "dda3faa5-7529-467f-934f-e5a9511c56ac",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-profile-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 40,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "21cb47d9-9c3c-4047-863b-001bb94003af",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "da810540-7a0f-46d6-b9c3-d71f01a97756",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "0ea59c19-a3f2-4fd1-9338-09acfc35b98b",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "8429ed62-e538-44f0-9300-af40a3060d0f",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": false,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "terms_and_conditions",
          "name": "Terms and Conditions",
          "providerId": "terms_and_conditions",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": true,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": true,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": true,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": false,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "userProfileEnabled": "false",
        "clientSessionMaxLifespan": "0",
        "parRequestUriLifespan": "60",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5"
      },
      "keycloakVersion": "15.0.2",
      "userManagedAccessAllowed": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
{{- end }}
