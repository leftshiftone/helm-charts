{{- if and .Values.rabbitmq.enabled }}
{{- $secretName := .Values.rabbitmq.auth.existingPasswordSecret | default (printf "%s-rabbitmq-passwords" (include "aios.fullname" .)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
  {{- include "aios.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  {{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace $secretName) }}
  {{- if $existingSecret }}
  {{- $existingSecretData := $existingSecret.data }}
  rabbitmq-user: {{ get $existingSecretData "rabbitmq-user" }}
  rabbitmq-password: {{ get $existingSecretData "rabbitmq-password" }}
  rabbitmq-erlang-cookie: {{ get $existingSecretData "rabbitmq-erlang-cookie" }}
  {{- else }}
  {{- if .Values.rabbitmq.auth.username }}
  rabbitmq-user: {{ b64enc .Values.rabbitmq.auth.username }}
  {{- else }}
  rabbitmq-user: {{ b64enc "admin" }}
  {{- end }}
  {{- if .Values.rabbitmq.auth.password }}
  rabbitmq-password: {{ b64enc .Values.rabbitmq.auth.password }}
  {{- else }}
  rabbitmq-password: {{ b64enc (include "aios.randomPassword" .) }}
  {{- end }}
  {{- if .Values.rabbitmq.auth.erlangCookie }}
  rabbitmq-erlang-cookie: {{ b64enc .Values.rabbitmq.auth.erlangCookie }}
  {{- else }}
  rabbitmq-erlang-cookie: {{ b64enc (include "aios.randomPassword" .) }}
  {{- end }}
  {{- end }}
{{- end -}}
