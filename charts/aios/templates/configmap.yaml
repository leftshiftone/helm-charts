apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aios.fullname" . }}
  labels:
  {{- include "aios.labels" . | nindent 4 }}
data:
  {{- if and (not (hasKey .Values.app.config "AIOS_HTTP_DNS_NAME")) .Values.ingress.enabled }}
  AIOS_HTTP_DNS_NAME: {{ (first .Values.ingress.hosts).host | quote }}
  {{- end }}
  # Database
  {{- $jdbcUrl := printf "jdbc:postgresql://%s-postgresql:5432/%s" (include "aios.fullname" .) .Values.postgresql.auth.database -}}
  {{- if and (not (hasKey .Values.app.config "AIOS_JDBC_URL")) .Values.postgresql.enabled }}
  AIOS_JDBC_URL: {{ $jdbcUrl | quote }}
  {{- end }}
  {{- if and (not (hasKey .Values.app.config "AIOS_JDBC_USERNAME")) .Values.postgresql.enabled }}
  AIOS_JDBC_USERNAME: {{ .Values.postgresql.auth.username | quote }}
  {{- end }}
  {{- if and (and (not (hasKey .Values.app.config "AIOS_JDBC_PASSWORD")) .Values.postgresql.enabled) .Values.postgresql.auth.password }}
  AIOS_JDBC_PASSWORD: {{ .Values.postgresql.auth.password | quote }}
  {{- end }}
  # Keycloak
  {{- if not (hasKey .Values.app.config "AIOS_SECURITY_KEYCLOAK_ENABLED") }}
  AIOS_SECURITY_KEYCLOAK_ENABLED: {{ .Values.keycloak.enabled | quote }}
  {{- end }}
  # Proxy
  {{- if not (hasKey .Values.app.config "AIOS_ENVOY_EXTENSION_SHA256_CHECKSUM") }}
  AIOS_ENVOY_EXTENSION_SHA256_CHECKSUM: "latest" # Will be replaced in the CI pipeline
  {{- end }}
  {{- if and (and (not (hasKey .Values.app.config "AIOS_SECURITY_KEYCLOAK_SSL_REQUIRED")) .Values.keycloak.enabled) (not .Values.keycloak.ingress.tls) }}
  AIOS_SECURITY_KEYCLOAK_SSL_REQUIRED: "none"
  {{- end }}
  # AMQP broker config
  {{- if .Values.rabbitmq.enabled }}
    {{- if not (hasKey .Values.app.config "AIOS_AMQP_ENABLED") }}
  AIOS_AMQP_ENABLED: "true"
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_AMQP_HOST") }}
  AIOS_AMQP_HOST: "{{ .Release.Name }}-rabbitmq"
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_AMQP_PORT") }}
  AIOS_AMQP_PORT: {{ .Values.rabbitmq.service.ports.amqp | quote }}
    {{- end }}
  {{- end }}
  # On-demand gateway config
  {{- if .Values.ondemand.enabled }}
    {{- if not (hasKey .Values.app.config "AIOS_ONDEMAND_ENABLED") }}
  AIOS_ONDEMAND_ENABLED: "true"
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_ONDEMAND_NAME") }}
  AIOS_ONDEMAND_NAME: "{{ .Values.ondemand.service.name}}"
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_ONDEMAND_CONFIG_NAME") }}
  AIOS_ONDEMAND_CONFIG_NAME: "{{ .Values.ondemand.configMapName }}"
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_ONDEMAND_CONFIG_FILE_NAME") }}
  AIOS_ONDEMAND_CONFIG_FILE_NAME: "{{ .Values.ondemand.configMapKey }}"
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_ONDEMAND_BROKER_URL") }}
  AIOS_ONDEMAND_BROKER_URL: "amqp://{{ .Release.Name }}-rabbitmq.{{ .Release.Namespace }}:{{ .Values.rabbitmq.service.ports.amqp }}/aios"
    {{- end }}
  {{- end }}

  # Grafana config
  {{- if and .Values.kubeprometheusstack.enabled .Values.kubeprometheusstack.grafana.enabled }}
    {{- if not (hasKey .Values.app.config "AIOS_GRAFANA_ENABLED") }}
  AIOS_GRAFANA_ENABLED: {{ .Values.kubeprometheusstack.grafana.enabled | quote }}
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_UI_GRAFANA_ENABLED") }}
  AIOS_UI_GRAFANA_ENABLED: {{ .Values.kubeprometheusstack.grafana.enabled | quote }}
    {{- end }}
  {{- end }}
  # Grafana agent config
  {{- if and .Values.grafanaagentoperator.enabled .Values.grafanaagentoperator.grafanaAgent.enabled }}
    {{- if not (hasKey .Values.app.config "AIOS_GRAFANA_AGENT_VERSION") }}
  AIOS_GRAFANA_AGENT_VERSION: {{ .Values.grafanaagentoperator.grafanaAgent.image.tag | quote }}
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_GRAFANA_AGENT_SERVICE_ACCOUNT_NAME") }}
  AIOS_GRAFANA_AGENT_SERVICE_ACCOUNT_NAME: {{ .Values.grafanaagentoperator.serviceAccount.name | quote }}
    {{- end }}
    {{- if not (hasKey .Values.app.config "AIOS_GRAFANA_AGENT_CREATE_PER_TENANT") }}
  AIOS_GRAFANA_AGENT_CREATE_PER_TENANT: {{ .Values.grafanaagentoperator.grafanaAgent.enabled | quote }}
    {{- end }}
  {{- end }}
  # Prometheus config
  {{- if and .Values.kubeprometheusstack.enabled .Values.kubeprometheusstack.prometheus.enabled }}
    {{- if not (hasKey .Values.app.config "AIOS_PROMETHEUS_ENABLED") }}
  AIOS_PROMETHEUS_ENABLED: {{ .Values.kubeprometheusstack.prometheus.enabled | quote }}
    {{- end }}
  {{- end }}
  {{- if not (hasKey .Values.app.config "AIOS_PROMETHEUS_RELEASE_NAMESPACE") }}
  AIOS_PROMETHEUS_RELEASE_NAMESPACE: {{ .Release.Namespace | quote }}
  {{- end }}
  # Loki config
  {{- if and .Values.lokistack.enabled .Values.lokistack.loki.enabled }}
    {{- if not (hasKey .Values.app.config "AIOS_LOKI_ENABLED") }}
  AIOS_LOKI_ENABLED: {{ .Values.lokistack.loki.enabled | quote }}
    {{- end }}
  {{- end }}
  # Kubernetes config
  {{- if not (hasKey .Values.app.config "AIOS_K8S_ENABLED") }}
  AIOS_K8S_ENABLED: "true"
  {{- end }}
  {{- if not (hasKey .Values.app.config "AIOS_K8S_MONITORING_ENABLED") }}
    {{- if or .Values.kubeprometheusstack.enabled .Values.grafanaagentoperator.enabled }}
  AIOS_K8S_MONITORING_ENABLED: "true"
    {{- else }}
  AIOS_K8S_MONITORING_ENABLED: "false"
    {{- end }}
  {{- end }}
  {{- if and (not (hasKey .Values.app.config "AIOS_K8S_SERVICE_ACCOUNT_NAME")) .Values.serviceAccount.create}}
  AIOS_K8S_SERVICE_ACCOUNT_NAME: {{ .Values.serviceAccount.name | default (include "aios.serviceAccountName" .) | quote }}
  {{- end }}
  {{- if hasKey .Values.app.config "AIOS_K8S_NAMESPACE_MODE" }}
  {{- if eq .Values.app.config.AIOS_K8S_NAMESPACE_MODE "CUSTOM" }}
  {{- if not (hasKey .Values.app.config "AIOS_K8S_NAMESPACE_FOR_SERVICES") }}
  AIOS_K8S_NAMESPACE_FOR_SERVICES: {{ .Release.Namespace | quote }}
  {{- end }}
  {{- end }}
  {{- end }}
  # Dynamic config
  {{- range $key, $val := .Values.app.config }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
