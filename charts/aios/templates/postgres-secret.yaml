{{- if and .Values.postgresql.enabled }}
apiVersion: v1
kind: Secret
metadata:
  {{- $postgresSecretName := default "aios-postgresql-passwords" .Values.postgresql.auth.existingSecret }}
  name: {{ $postgresSecretName }}
  labels:
  {{- include "aios.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  {{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace $postgresSecretName) }}
  {{- if $existingSecret }}
  {{- $existingSecretData := $existingSecret.data }}
  postgresql-postgres-password: {{ get $existingSecretData "postgresql-postgres-password" }}
  postgresql-password: {{ get $existingSecretData "postgresql-password" }}
  {{- else }}
    {{- if .Values.postgresql.auth.existingSecret }}
  postgresql-postgres-password: {{ b64enc (include "aios.randomPassword" .) }}
  postgresql-password: {{ b64enc (include "aios.randomPassword" .) }}
    {{- else }}
  postgresql-postgres-password: {{ b64enc .Values.postgresql.auth.postgresPassword }}
  postgresql-password: {{ b64enc .Values.postgresql.auth.password }}
    {{- end }}
  {{- end }}
{{- end -}}
